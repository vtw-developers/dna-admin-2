<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vtw.dna.integration.monitor.log.api.repository.ApiLogRepository">
  <select id="count">
    SELECT COUNT(*)
    FROM API_LOG A
    LEFT OUTER JOIN
    (
      SELECT
        B.ID,
        B.NAME,
        B.FLOW_ID,
        C.ID AS SERVICE_GROUP_ID,
        C.NAME AS SERVICE_GROUP_NAME
      FROM API_INFO B
      LEFT OUTER JOIN SERVICE_GROUP C
        ON B.SERVICE_GROUP_ID = C.ID
    ) D
    ON A.FLOW_ID = D.FLOW_ID
    <where>
      <if test="filter.result != null">
        AND A.RESULT = #{filter.result}
      </if>
      <if test="filter.fromTime != null">
        AND A.TIMESTAMP &gt;= #{filter.fromTime}
      </if>
      <if test="filter.toTime != null">
        AND A.TIMESTAMP &lt;= #{filter.toTime}
      </if>
      <if test="filter.serviceGroupId != null">
        AND D.SERVICE_GROUP_ID = #{filter.serviceGroupId}
      </if>
      <if test="filter.apiInfoId != null">
        AND D.ID = #{filter.apiInfoId}
      </if>
    </where>
  </select>

  <select id="findAll">
    SELECT
      A.MESSAGE_ID,
      A.TIMESTAMP,
      A.RESULT,
      D.ID AS API_INFO_ID,
      D.NAME AS API_INFO_NAME,
      D.SERVICE_GROUP_ID AS SERVICE_GROUP_ID,
      D.SERVICE_GROUP_NAME AS SERVICE_GROUP_NAME
    FROM API_LOG A
    LEFT OUTER JOIN
      (
        SELECT
          B.ID,
          B.NAME,
          B.FLOW_ID,
          C.ID AS SERVICE_GROUP_ID,
          C.NAME AS SERVICE_GROUP_NAME
        FROM API_INFO B
        LEFT OUTER JOIN SERVICE_GROUP C
          ON B.SERVICE_GROUP_ID = C.ID
      ) D
    ON A.FLOW_ID = D.FLOW_ID
    <where>
      <if test="filter.result != null">
        AND A.RESULT = #{filter.result}
      </if>
      <if test="filter.fromTime != null">
        AND A.TIMESTAMP &gt;= #{filter.fromTime}
      </if>
      <if test="filter.toTime != null">
        AND A.TIMESTAMP &lt;= #{filter.toTime}
      </if>
      <if test="filter.serviceGroupId != null">
        AND D.SERVICE_GROUP_ID = #{filter.serviceGroupId}
      </if>
      <if test="filter.apiInfoId != null">
        AND D.ID = #{filter.apiInfoId}
      </if>
    </where>
    ORDER BY TIMESTAMP DESC
    OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
  </select>

  <select id="findById">
    SELECT
      *
    FROM API_LOG A
    WHERE A.MESSAGE_ID = #{messageId}
  </select>
</mapper>
