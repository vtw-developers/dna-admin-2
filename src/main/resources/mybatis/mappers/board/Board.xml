<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vtw.dna.board.repository.BoardRepository">
  <select id="count">
    SELECT COUNT(*)
    FROM BOARD A
    LEFT OUTER JOIN USERS U
      ON A.AUTHOR_ID = U.ID
    <where>
      <if test="filter.title != null and filter.title != ''">
        AND A.TITLE LIKE '%' || #{filter.title} || '%'
      </if>
      <if test="filter.startModifiedTime != null">
        AND A.MODIFIED_TIME &gt;= #{filter.startModifiedTime}
      </if>
      <if test="filter.endModifiedTime != null">
        AND A.MODIFIED_TIME &lt;= #{filter.endModifiedTime}
      </if>
      <if test="filter.author != null and filter.author != ''">
        AND U.AUTHOR LIKE '%' || #{filter.author} || '%'
      </if>
      AND A.USE_YN = 'Y'
      AND A.BOARD_MASTER_ID  =  #{filter.boardMasterId}
    </where>
  </select>

  <select id="countByBoardType">
    SELECT COUNT(*)
    FROM BOARD
    <where>
      BOARD_MASTER_ID  =  #{boardMasterId}
    </where>
  </select>

  <select id="findAll" resultType="com.vtw.dna.board.dto.BoardQuery">
    SELECT
      A.ID,
      A.BOARD_NO,
      A.TITLE,
      A.CONTENT,
      U.ID AS AUTHOR_ID,
      U.NAME AS AUTHOR_NAME,
      A.MODIFIED_TIME
    FROM BOARD A
    LEFT OUTER JOIN USERS U
      ON A.AUTHOR_ID = U.ID
    <where>
      <if test="filter.title != null and filter.title != ''">
        AND A.TITLE LIKE '%' || #{filter.title} || '%'
      </if>
      <if test="filter.startModifiedTime != null">
        AND A.MODIFIED_TIME &gt;= #{filter.startModifiedTime}
      </if>
      <if test="filter.endModifiedTime != null">
        AND A.MODIFIED_TIME &lt;= #{filter.endModifiedTime}
      </if>
      <if test="filter.author != null and filter.author != ''">
        AND U.AUTHOR LIKE '%' || #{filter.author} || '%'
      </if>
      AND A.USE_YN = 'Y'
      AND A.BOARD_MASTER_ID  =  #{filter.boardMasterId}
    </where>
    <if test="pageable.sort != null and !pageable.sort.isEmpty()">
      ORDER BY
      <foreach collection="pageable.sort" item="order" separator=",">
        <if test="order.property == 'title'">
          A.TITLE
        </if>
        <if test="order.property == 'boardNo'">
          A.BOARD_NO
        </if>
        <if test="order.property == 'authorName'">
          U.NAME
        </if>
        <if test="order.property == 'modifiedTime'">
          A.MODIFIED_TIME
        </if>
        ${order.direction}
      </foreach>
    </if>
    OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
  </select>

  <select id="findById" resultType="com.vtw.dna.board.dto.BoardQuery">
    SELECT
      A.ID,
      A.BOARD_NO,
      A.TITLE,
      A.CONTENT,
      A.USE_YN,
      U.ID AS AUTHOR_ID,
      U.NAME AS AUTHOR_NAME,
      A.MODIFIED_TIME
    FROM BOARD A
    LEFT OUTER JOIN USERS U
      ON A.AUTHOR_ID = U.ID
    WHERE A.ID = #{id}
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO BOARD (
      BOARD_MASTER_ID,
      TITLE,
      CONTENT,
      BOARD_NO,
      PARENT_ID,
      USE_YN,
      AUTHOR_ID,
      MODIFIED_TIME
    ) VALUES (
      #{boardMasterId},
      #{title},
      #{content},
      #{boardNo},
      #{parentId},
      #{useYn},
      #{authorId},
      now()
    )
  </insert>

  <update id="update">
    UPDATE BOARD SET
      TITLE = #{title},
      CONTENT = #{content},
      PARENT_ID = #{parentId},
      USE_YN = #{useYn},
      AUTHOR_ID = #{authorId},
      MODIFIED_TIME = now()
    WHERE ID = #{id}
  </update>

  <delete id="delete">
    DELETE FROM BOARD
    WHERE ID = #{id}
  </delete>
</mapper>
